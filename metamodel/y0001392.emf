@namespace(prefix = "y0001392", uri = "y0001392")
@emf.gen(fileExtensions = "y0001392")
@gmf
package y0001392;

@gmf.diagram(mode.extesion = "y0001392", diagram.extension = "y0001392-diagram")
class Universe {
	val Institution[*] institutions;
	val Language[1..*] languages;
	
	val Attendee[1..*] attendees;
	
	val Dinner dinner;
}

@gmf.node(label = "name")
class Dinner {
	attr String name;
	
	val Table[*]#dinner tables;
}

@gmf.node(
	label = "identifier,capacity",
	label.pattern = "{0} (Max {1})",
	label.placement = "internal",
	figure = "ellipse",
	color = "51,94,255",
	label.icon = "false",
	phantom = "true"
)
class Table {
	attr String identifier;
	attr int capacity;
	
	ref Dinner#tables dinner;
	
	@gmf.affixed
	val Seat[1..*]#table seats;
}

@gmf.node(label = "number", label.pattern = "Seat {0}")
class Seat {
	attr int number;
	
	ref Table#seats table;
	ref Attendee#seat person;
}

@gmf.node(label = "name,surname", label.pattern = "{0} {1}")
class Attendee {
	attr String name;
	attr String surname;

	@gmf.label(label="name", label.parser="MessageFormatParser", label.icon="false", label.pattern="Self Confidence : {0}") 
	ref Institution affiliation;
	
	@gmf.link(
		color="0,255,0", 
		source.constraint="self <> oppositeEnd",
		target.decoration="arrow"
	)
	ref Attendee[*] likes;
	
	@gmf.link(
		color="255,0,0", 
		source.constraint="self <> oppositeEnd", 
		target.decoration="arrow"
	)
	ref Attendee[*] dislikes;
	
	ref Language[1..*] languages;
	
	attr String[*] allergies;
	
	@gmf.link(width = "2")
	ref Seat#person seat;
}

@gmf.node(label = "name")
class Institution {
	attr String name;
}

@gmf.node(label = "name")
class Language {
	attr String name;
}
